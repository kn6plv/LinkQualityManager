#!/usr/bin/lua
--[[

	Copyright (C) 2022 Tim Wilkinson
	See Contributors file for additional contributors

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3 of the License.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.

	Additional Terms:

	Additional use restrictions exist on the AREDN(TM) trademark and logo.
		See AREDNLicense.txt for more info.

	Attributions to the AREDN Project must be retained in the source code.
	If importing this code into a new or existing project attribution
	to the AREDN project must be added to the source code.

	You must not misrepresent the origin of the material contained within.

	Modified versions must be modified to attribute to the original source
	and be marked in reasonable ways as differentiate it from the original
	version

--]]

require("iwinfo")
require("aredn.utils")
local json = require("luci.jsonc")

-- read_postdata
local params = nil
if os.getenv("REQUEST_METHOD") == "POST" then
	require('luci.sys')
    require('luci.http')
    local request = luci.http.Request(luci.sys.getenv(),
      function()
        local v = io.read(1024)
        if not v then
            io.close()
        end
        return v
      end
    )
    params = request:formvalue()
end

local f = io.open("/etc/local/lqm.conf")
local config = json.parse(f:read("*a"))
f:close()

if params then
	if tonumber(params.high) then
		config.high = tonumber(params.high)
	end
	if tonumber(params.low) then
		config.low = tonumber(params.low)
	end
	f = io.open("/etc/local/lqm.conf", "w")
	f:write(json.stringify(config, true))
	f:close()
end

local kv = {
	["signal avg:"] = "signal",
	["last ack signal:"] = "ack_signal",
	["tx packets:"] = "tx_packets",
	["tx retries:"] = "tx_retries",
	["tx failed:"] = "tx_fail",
	["tx bitrate:"] = "tx_rate",
	["tx bitrate:.+MCS"] = "tx_mcs",
	["rx packets:"] = "rx_packets",
	["rx drop misc:"] = "rx_drop",
	["rx bitrate:"] = "rx_rate",
	["rx bitrate:.+MCS"] = "rx_mcs",
	["expected throughput:"] = "thru"
}
local stations = {}
local station = {}
for line in io.popen("iw " .. get_ifname("wifi") .. " station dump"):lines()
do
	local mac = line:match("^Station ([0-9a-f:]+) ")
	if mac then
		station = {
			signal = -95,
			noise = -95,
			blocked = false
		}
		stations[mac:upper()] = station
	else
		for k, v in pairs(kv)
		do
			local val = line:match(k .. "%s*([%d%-]+)")
			if val then
				station[v] = tonumber(val)
			end
		end
	end
end

for line in io.popen("/usr/sbin/iptables -L input_lqm"):lines()
do
	local mac = line:match("MAC ([0-9A-F:]+)")
	if mac and stations[mac] then
		stations[mac].blocked = true
	end
end

if not (arg and arg[1] == "inline") then
	print "Content-type: application/json\r"
	print "Cache-Control: no-store\r"
	print "\r"
end
print(json.stringify({
	config = config,
	links = stations
}));

--[[
iw wlan0 station dump

Station c4:ad:34:fc:71:62 (on wlan0)
        inactive time:  0 ms
        rx bytes:       25199259
        rx packets:     109963
        tx bytes:       9733597
        tx packets:     26872
        tx retries:     10066
        tx failed:      6
        rx drop misc:   1358
        signal:         -80 [-82, -85] dBm
        signal avg:     -79 [-80, -84] dBm
        tx bitrate:     13.0 MBit/s MCS 1
        rx bitrate:     39.0 MBit/s MCS 10
        rx duration:    0 us
        last ack signal:14 dBm
        expected throughput:    8.879Mbps
        authorized:     yes
        authenticated:  yes
        associated:     yes
        preamble:       long
        WMM/WME:        yes
        MFP:            no
        TDLS peer:      no
        DTIM period:    0
        beacon interval:100
        short slot time:yes
        connected time: 6442 seconds
--]]


